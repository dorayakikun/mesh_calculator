version: 2

base_image: &base_image
  image: circleci/node:10.13-browsers

build_image: &build_image
  docker:
    - <<: *base_image
  working_directory: ~/repo

save_lock: &save_lock
  save_cache:
    key: node_modules-{{ checksum "package-lock.json" }}
    paths:
      - node_modules

restore_lock: &restore_lock
  restore_cache:
    keys: 
      - node_modules-{{ checksum "package-lock.json" }}

save: &save
  save_cache:
    key: code-{{ .Revision }}
    paths:
      - .
      - ".git"
      - "~/.ssh"
      - "~/repo"

restore: &restore
  restore_cache:
    keys: 
      - code-{{ .Revision }}

jobs:
  upload_lock:
    <<: *build_image

    environment:
      GIT_AUTHOR_NAME: greenkeeperio-bot
      GIT_AUTHOR_EMAIL: support@greenkeeper.io
      GIT_COMMITTER_NAME: greenkeeperio-bot
      GIT_COMMITTER_EMAIL: support@greenkeeper.io

    steps:
      - checkout
      - run: npx --package greenkeeper-lockfile@2 greenkeeper-lockfile-upload

  install:
    <<: *build_image

    environment:
      GIT_AUTHOR_NAME: greenkeeperio-bot
      GIT_AUTHOR_EMAIL: support@greenkeeper.io
      GIT_COMMITTER_NAME: greenkeeperio-bot
      GIT_COMMITTER_EMAIL: support@greenkeeper.io

    steps:
      - checkout
      - <<: *restore_cache
      - run: case $CIRCLE_BRANCH in greenkeeper*) npm i;; *) npm ci;; esac;
      - run: npx --package greenkeeper-lockfile@2 greenkeeper-lockfile-update
      - <<: *save_lock
      - <<: *save

  lint:
    <<: *build_image

    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: npm run lint --format junit -o reports/eslint.xml

  typecheck:
    <<: *build_image
    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: npm run typecheck

  audit:
    <<: *build_image
    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: npm audit

  test:
    <<: *build_image

    steps:
      - <<: *restore
      - <<: *restore_lock
      - run: 
        name: Run tests with JUnit as reporter
        command: npm test -- --ci --reporters=default --reporters=jest-junit
        environment:
          JEST_JUNIT_OUTPUT: "reports/js-test-results.xml"
            
      - run:
          name: Send coverage to Code Climate
          command: npx --package codeclimate-test-reporter codeclimate-test-reporter < 'coverage/lcov.info'

      - run: 
          name: Run regression tests
          command: |
            npm run build
            sed -i -e 's/your_incoming_webhook_url/${WEBHOOK_URL}/g' regconfig.json
            npm run regression

      - run: 
          name: Deploy to GitHub Pages
          command: |
            git config --global user.email "dorayakikun@users.noreply.github.com"
            git config --global user.name dorayakikun
            echo "machine github.com login dorayakikun password $GITHUB_TOKEN" > ~/.netrc
            cd website && npm install && GIT_USER=dorayakikun npm run publish-gh-pages

      - store_test_results:
          path: ./reports

      - store_artifacts:
          path: ./reports

workflows:
  version: 2
  exec:
    jobs:
      - install
      - lint:
          requires:
            - install
      - typecheck:
          requires:
            - install
      - audit:
          requires:
            - install
      - test:
          requires:
            - install
      - upload_lock:
          requires:
            - lint
            - typecheck
            - audit
            - test
