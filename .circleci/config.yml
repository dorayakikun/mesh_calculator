version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.13-browsers

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          - v2-dependencies-

      - run: 
          name: Install dependencies
          command: npm ci

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}

      - run: 
          name: Run lint
          command: |
            npm run lint -- --format junit -o reports/eslint.xml

      - run: 
          name: Install JUnit coverage reporter
          command: npm i -D jest-junit

      - run: 
          name: Install Code Climate test reporter
          command: npm i -D codeclimate-test-reporter

      - run: 
          name: Run tests with JUnit as reporter
          command: npm test -- --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/js-test-results.xml"
            
      - run:
          name: Send coverage to Code Climate
          command: npx codeclimate-test-reporter < 'coverage/lcov.info'

      - run: 
          name: Run regression tests
          command: |
            npm run build
            sed -i -e 's/your_incoming_webhook_url/${WEBHOOK_URL}/g' regconfig.json
            npm run regression

      - run: 
          name: Deploy to GitHub Pages
          command: |
            git config --global user.email "dorayakikun@users.noreply.github.com"
            git config --global user.name dorayakikun
            echo "machine github.com login dorayakikun password $GITHUB_TOKEN" > ~/.netrc
            cd website && npm install && GIT_USER=dorayakikun npm run publish-gh-pages

      - store_test_results:
                path: ./reports

      - store_artifacts:
                path: ./reports