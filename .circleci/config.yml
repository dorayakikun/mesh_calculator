version: 2

base_image: &base_image
  image: circleci/node:10.13-browsers

build_image: &build_image
  docker:
    - <<: *base_image
  working_directory: ~/repo

save_cache: &save_cache
  key: v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{ arch }}-npm-cache-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}
  paths:
    - ~/.npm/_cacache

restore_cache: &restore_cache
  keys:
    - v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{ arch }}-npm-cache-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
    - v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{ arch }}-npm-cache-master-{{ .Environment.CIRCLE_JOB }}

jobs:
  upload_lock:
    <<: *build_image

    steps:
      - checkout
      - run: npx --package greenkeeper-lockfile@2 greenkeeper-lockfile-upload

  build:
    <<: *build_image
    steps:
      - checkout
      - <<: *restore_cache
      - run: 
          name: Install dependencies
          command: npm ci

      - run: 
          name: Run lint
          command: |
            npm run lint -- --format junit -o reports/eslint.xml

      - run: 
          name: Install JUnit coverage reporter
          command: npm i -D jest-junit

      - run: 
          name: Install Code Climate test reporter
          command: npm i -D codeclimate-test-reporter

      - run: 
          name: Run tests with JUnit as reporter
          command: npm test -- --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/js-test-results.xml"
            
      - run:
          name: Send coverage to Code Climate
          command: npx codeclimate-test-reporter < 'coverage/lcov.info'

      - run: 
          name: Run regression tests
          command: |
            npm run build
            sed -i -e 's/your_incoming_webhook_url/${WEBHOOK_URL}/g' regconfig.json
            npm run regression

      - run: 
          name: Deploy to GitHub Pages
          command: |
            git config --global user.email "dorayakikun@users.noreply.github.com"
            git config --global user.name dorayakikun
            echo "machine github.com login dorayakikun password $GITHUB_TOKEN" > ~/.netrc
            cd website && npm install && GIT_USER=dorayakikun npm run publish-gh-pages

      - store_test_results:
          path: ./reports

      - store_artifacts:
          path: ./reports

      - <<: *save_cache

workflows:
  version: 2
  circleci_example:
    jobs:
      - upload_lock
      - build:
          requires:
            - upload_lock
